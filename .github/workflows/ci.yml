name: CI

on: 
  - push
  - pull_request

jobs:
  test:
    runs-on: ${{ matrix.os }}
    # runs-on: [self-hosted, linux, x64, my-wsl-ubuntu-18.04.2-LTS]
    strategy:
      fail-fast: false
      matrix:
        julia-version: 
          - '1.6'
          - '1.7'
          - '1.8'
        julia-arch: 
          - x64
          # - x86
        os: 
          - ubuntu-22.04
          - ubuntu-20.04
        # exclude: # TODO change this once we have some better runners
        #   - julia-arch: x86

    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.julia-version }}
          arch: ${{ matrix.julia-arch }}
        # new stuff
        #
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      # - shell: bash
      #   run: rm -f Manifest.toml
      - run: |
          julia --color=yes -e '
            using Pkg
            Pkg.activate(".")
            Pkg.instantiate()
          '
        # end
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
        with:
          annotate: true
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: lcov.info
          fail_ci_if_error: false
          verbose: true

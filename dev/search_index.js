var documenterSearchIndex = {"docs":
[{"location":"#Exodus.jl","page":"Exodus.jl","title":"Exodus.jl","text":"","category":"section"},{"location":"","page":"Exodus.jl","title":"Exodus.jl","text":"Documentation for Exodus.jl","category":"page"},{"location":"#Documentation","page":"Exodus.jl","title":"Documentation","text":"","category":"section"},{"location":"","page":"Exodus.jl","title":"Exodus.jl","text":"Modules = [Exodus]","category":"page"},{"location":"#Exodus.Block","page":"Exodus.jl","title":"Exodus.Block","text":"Block{I <: ExoInt, B <: ExoInt}\n\nContainer for reading in blocks\n\n\n\n\n\n","category":"type"},{"location":"#Exodus.Block-Union{Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, I}} where {M<:Union{Int32, Int64}, I<:Union{Int32, Int64}, B<:Union{Int32, Int64}, F<:Union{Float32, Float64}}","page":"Exodus.jl","title":"Exodus.Block","text":"Block(exo::ExodusDatabase{M, I, B, F}, block_id::I) where {M <: ExoInt, I <: ExoInt,\n                                                           B <: ExoInt, F <: ExoFloat}\n\nInit method for block container.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.put_coordinate_names-Union{Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, Vector{String}}} where {M<:Union{Int32, Int64}, I<:Union{Int32, Int64}, B<:Union{Int32, Int64}, F<:Union{Float32, Float64}}","page":"Exodus.jl","title":"Exodus.put_coordinate_names","text":"put_coordinate_names(exo::ExodusDatabase{M, I, B, F}, \n                     coord_names::Vector{String}) where {M <: ExoInt, I <: ExoInt,\n                                                         B <: ExoInt, F <: ExoFloat}\n\nWork in progress...\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.put_coordinates-Union{Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, Matrix{F}}} where {M<:Union{Int32, Int64}, I<:Union{Int32, Int64}, B<:Union{Int32, Int64}, F<:Union{Float32, Float64}}","page":"Exodus.jl","title":"Exodus.put_coordinates","text":"put_coordinates(exo::ExodusDatabase{M, I, B, F}, \n                     coords::Matrix{F}) where {M <: ExoInt, I <: ExoInt,\n                                               B <: ExoInt, F <: ExoFloat}\n\nWork in progress... not that well tested\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_block_ids-Union{Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, Initialization}} where {M<:Union{Int32, Int64}, I<:Union{Int32, Int64}, B<:Union{Int32, Int64}, F<:Union{Float32, Float64}}","page":"Exodus.jl","title":"Exodus.read_block_ids","text":"read_block_ids(exo::ExodusDatabase{M, I, B, F}, \n               init::Initialization) where {M <: ExoInt, I <: ExoInt, \n                                            B <: ExoInt, F <: ExoFloat}\n\nRetrieves numerical block ids.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_blocks-Union{Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, Vector{I}}} where {M<:Union{Int32, Int64}, I<:Union{Int32, Int64}, B<:Union{Int32, Int64}, F<:Union{Float32, Float64}}","page":"Exodus.jl","title":"Exodus.read_blocks","text":"read_blocks(exo::ExodusDatabase{M, I, B, F}, \n            block_ids::Vector{I}) where {M <: ExoInt, I <: ExoInt,\n                                         B <: ExoInt, F <: ExoFloat}\n\nHelper method for initializing blocks.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_coordinate_names-Union{Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, Initialization}} where {M<:Union{Int32, Int64}, I<:Union{Int32, Int64}, B<:Union{Int32, Int64}, F<:Union{Float32, Float64}}","page":"Exodus.jl","title":"Exodus.read_coordinate_names","text":"read_coordinate_names(exo::ExodusDatabase{M, I, B, F}, \n                      init::Initialization) where {M <: ExoInt, I <: ExoInt,\n                                                   B <: ExoInt, F <: ExoFloat}\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_coordinates-Union{Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, Initialization}} where {M<:Union{Int32, Int64}, I<:Union{Int32, Int64}, B<:Union{Int32, Int64}, F<:Union{Float32, Float64}}","page":"Exodus.jl","title":"Exodus.read_coordinates","text":"read_coordinates(exo::ExodusDatabase{M, I, B, F}, \n                 init::Initialization) where {M <: ExoInt, I <: ExoInt,\n                                              B <: ExoInt, F <: ExoFloat}\n\nMethod to read coordinates. Returns a matrix that is nnodes x ndim.\n\nTODO... This method should really return ndim x nnodes but there's TODO... issues encountered downstream with some views found in Tardigrade\n\n\n\n\n\n","category":"method"}]
}

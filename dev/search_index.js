var documenterSearchIndex = {"docs":
[{"location":"#Exodus.jl","page":"Exodus.jl","title":"Exodus.jl","text":"","category":"section"},{"location":"","page":"Exodus.jl","title":"Exodus.jl","text":"Documentation for Exodus.jl","category":"page"},{"location":"#Documentation","page":"Exodus.jl","title":"Documentation","text":"","category":"section"},{"location":"","page":"Exodus.jl","title":"Exodus.jl","text":"Modules = [Exodus]","category":"page"},{"location":"#Exodus.Exodus","page":"Exodus.jl","title":"Exodus.Exodus","text":"Block\nExodusDatabase\nInitialization\nNodeSet\nclose\ncopy\n@exodiff\nread_block_ids\nread_blocks\nread_coordinate_names\nread_coordinates\nread_element_map\nread_element_variable_names\nread_element_variable_values\nread_global_variables\nread_nodal_variable_names\nread_nodal_variable_values\nread_node_set_ids\nread_node_sets\nread_number_of_element_variables\nread_number_of_global_variables\nread_number_of_nodal_variables\nread_number_of_time_steps\nread_times\nwrite_coordinate_names\nwrite_coordinates\nwrite_global_variable_values\nwrite_initialization!\nwrite_number_of_global_variables\nwrite_time\n\n\n\n\n\n","category":"module"},{"location":"#Exodus.Block","page":"Exodus.jl","title":"Exodus.Block","text":"block_id::Integer: ID of block\n\nnum_elem::Int64: Number of elements in block\n\nnum_nodes_per_elem::Int64: Number of nodes per element in block\n\nelem_type::String: Type of finite element, e.g. QUAD4\n\nconn::Array{B} where B<:Integer: Connectivty of integer type consistent with exodus database\n\n\n\n\n\n","category":"type"},{"location":"#Exodus.Block-Union{Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, Integer}} where {M<:Integer, I<:Integer, B<:Integer, F<:Real}","page":"Exodus.jl","title":"Exodus.Block","text":"Init method for block container.\n\nWraps ex_get_block! and ex_get_conn!\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.ExodusDatabase","page":"Exodus.jl","title":"Exodus.ExodusDatabase","text":"exo::Int32: ID of exodus file\n\ninit::Initialization: Initiailization object\n\n\n\n\n\n","category":"type"},{"location":"#Exodus.ExodusDatabase-Tuple{String, String}","page":"Exodus.jl","title":"Exodus.ExodusDatabase","text":"Init method.\n\nArguments\n\nfile_name::String: absolute path to exodus file\nmode::String: mode to read \nint_mode: either 32-bit or 64-bit\nfloat_mode: either 32-bit or 64-bit\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.Initialization","page":"Exodus.jl","title":"Exodus.Initialization","text":"num_dim::Int64: Dimension of exodus database\n\nnum_nodes::Int64: Number of nodes in exodus database\n\nnum_elems::Int64: Number of elements in exodus database\n\nnum_elem_blks::Int64: Number of element blocks in exodus database\n\nnum_node_sets::Int64: Number of node sets in exodus database\n\nnum_side_sets::Int64: Number of side sets in exodus database\n\n\n\n\n\n","category":"type"},{"location":"#Exodus.Initialization-Tuple{E} where E<:ExodusDatabase","page":"Exodus.jl","title":"Exodus.Initialization","text":"Initialization(exo::ExodusDatabase) -> Initialization\n\n\nInitialization(exo)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.Initialization-Tuple{I} where I<:Integer","page":"Exodus.jl","title":"Exodus.Initialization","text":"Initialization(exo_id::Integer) -> Initialization\n\n\nInitialization(exo_id)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.NodeSet","page":"Exodus.jl","title":"Exodus.NodeSet","text":"node_set_id::Integer: ID of node set\n\nnum_nodes::Int64: Number of nodes in the node set\n\nnodes::Vector{B} where B<:Integer: Node IDs for each node in the node set\n\n\n\n\n\n","category":"type"},{"location":"#Exodus.NodeSet-Union{Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, I}} where {M<:Integer, I<:Integer, B<:Integer, F<:Real}","page":"Exodus.jl","title":"Exodus.NodeSet","text":"Init method for a NodeSet with ID nodesetid.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.ex_entity_id","page":"Exodus.jl","title":"Exodus.ex_entity_id","text":"exentityid = Clonglong\n\n\n\n\n\n","category":"type"},{"location":"#Exodus.ex_entity_type","page":"Exodus.jl","title":"Exodus.ex_entity_type","text":"ex_entity_type\n\nEntity type enums (exentitytype in exodusII.h)\n\n\n\n\n\n","category":"type"},{"location":"#Exodus.ex_inquiry","page":"Exodus.jl","title":"Exodus.ex_inquiry","text":"ex_inquiry\n\nInquiry enums (ex_inquiry in exodusII.h).\n\n\n\n\n\n","category":"type"},{"location":"#Exodus.void_int","page":"Exodus.jl","title":"Exodus.void_int","text":"void_int = Cvoid\n\n\n\n\n\n","category":"type"},{"location":"#Base.close-Tuple{E} where E<:ExodusDatabase","page":"Exodus.jl","title":"Base.close","text":"close(exo::ExodusDatabase)\n\n\nUsed to close and ExodusDatabase.\n\nclose(exo)\n\n\n\n\n\n","category":"method"},{"location":"#Base.copy-Union{Tuple{E}, Tuple{E, String}} where E<:ExodusDatabase","page":"Exodus.jl","title":"Base.copy","text":"copy(exo::ExodusDatabase, new_file_name::String)\n\n\nUsed to copy an ExodusDatabase. As of right now this is the best way to create a new ExodusDatabase for output. Not all of the put methods have been wrapped and properly tested. This one has though.\n\ncopy(exo, new_file_name)\n\n\n\n\n\n","category":"method"},{"location":"#Base.length-Tuple{NodeSet}","page":"Exodus.jl","title":"Base.length","text":"length(nset::NodeSet) -> Int64\n\n\nlength(nset)\n\n\n\n\n\n","category":"method"},{"location":"#Base.show-Tuple{IO, Initialization}","page":"Exodus.jl","title":"Base.show","text":"show(io::IO, init::Initialization)\n\n\nshow(io, init)\n\n\n\n\n\n","category":"method"},{"location":"#Base.show-Union{Tuple{N}, Tuple{IO, N}} where N<:NodeSet","page":"Exodus.jl","title":"Base.show","text":"show(io::IO, node_set::NodeSet)\n\n\nshow(io, node_set)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.ExodusDatabase!-Union{Tuple{E}, Tuple{E, Initialization}} where E<:ExodusDatabase","page":"Exodus.jl","title":"Exodus.ExodusDatabase!","text":"ExodusDatabase!(\n    e::ExodusDatabase,\n    init::Initialization\n) -> Initialization\n\n\nExodusDatabase!(e, init)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.ex_put_coord!-Tuple{Int32, Any, Any, Any}","page":"Exodus.jl","title":"Exodus.ex_put_coord!","text":"ex_put_coord!(exoid::Int32, x_coords, y_coords, z_coords)\n\n\nNOT THAT WELL TESTED\n\nex_put_coord!(exoid, x_coords, y_coords, z_coords)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.exodus_error_check-Union{Tuple{T}, Tuple{T, String}} where T<:Integer","page":"Exodus.jl","title":"Exodus.exodus_error_check","text":"exodus_error_check(error_code::Integer, method_name::String)\n\n\nGeneric error handling method.\n\nArguments\n\nerror_code::T: error code, usually negative means something went bad\nmethod_name::String: method name that called this\n\nexodus_error_check(error_code, method_name)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_block_connectivity-Union{Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, I}} where {M<:Integer, I<:Integer, B<:Integer, F<:Real}","page":"Exodus.jl","title":"Exodus.read_block_connectivity","text":"read_block_connectivity(\n    exo::ExodusDatabase{M<:Integer, I<:Integer, B<:Integer, F<:Real},\n    block_id::Integer\n) -> Any\n\n\nread_block_connectivity(exo, block_id)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_block_ids-Union{Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, Initialization}} where {M<:Integer, I<:Integer, B<:Integer, F<:Real}","page":"Exodus.jl","title":"Exodus.read_block_ids","text":"read_block_ids(\n    exo::ExodusDatabase{M<:Integer, I<:Integer, B<:Integer, F<:Real},\n    init::Initialization\n) -> Vector\n\n\nRetrieves numerical block ids.\n\nWraps exgetids!\n\nread_block_ids(exo, init)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_blocks!-Union{Tuple{I}, Tuple{B}, Tuple{Vector{B}, ExodusDatabase, Vector{I}}} where {B<:Block, I<:Integer}","page":"Exodus.jl","title":"Exodus.read_blocks!","text":"read_blocks!(\n    blocks::Array{B<:Block, 1},\n    exo::ExodusDatabase,\n    block_ids::Array{I<:Integer, 1}\n)\n\n\nread_blocks!(blocks, exo, block_ids)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_blocks-Union{Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, Vector{I}}} where {M<:Integer, I<:Integer, B<:Integer, F<:Real}","page":"Exodus.jl","title":"Exodus.read_blocks","text":"read_blocks(\n    exo::ExodusDatabase{M<:Integer, I<:Integer, B<:Integer, F<:Real},\n    block_ids::Array{I<:Integer, 1}\n) -> Vector\n\n\nHelper method for initializing blocks.\n\nread_blocks(exo, block_ids)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_coordinate_names-Tuple{E} where E<:ExodusDatabase","page":"Exodus.jl","title":"Exodus.read_coordinate_names","text":"read_coordinate_names(exo::ExodusDatabase) -> Vector{String}\n\n\nread_coordinate_names(exo)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_coordinates-Union{Tuple{ExodusDatabase{M, I, B, F}}, Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}} where {M<:Integer, I<:Integer, B<:Integer, F<:Real}","page":"Exodus.jl","title":"Exodus.read_coordinates","text":"read_coordinates(\n    exo::ExodusDatabase{M<:Integer, I<:Integer, B<:Integer, F<:Real}\n) -> Any\n\n\nMethod to read coordinates. Returns a matrix that is nnodes x ndim.\n\nTODO... This method should really return ndim x nnodes but there's TODO... issues encountered downstream with some views found in Tardigrade\n\nread_coordinates(exo)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_element_block_parameters-Union{Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, I}} where {M<:Integer, I<:Integer, B<:Integer, F<:Real}","page":"Exodus.jl","title":"Exodus.read_element_block_parameters","text":"read_element_block_parameters(\n    exo::ExodusDatabase{M<:Integer, I<:Integer, B<:Integer, F<:Real},\n    block_id::Integer\n) -> Tuple{String, Any, Any, Any, Any, Any}\n\n\nread_element_block_parameters(exo, block_id)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_element_map-Union{Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, Initialization}} where {M<:Integer, I<:Integer, B<:Integer, F<:Real}","page":"Exodus.jl","title":"Exodus.read_element_map","text":"read_element_map(\n    exo::ExodusDatabase{M<:Integer, I<:Integer, B<:Integer, F<:Real},\n    init::Initialization\n) -> Vector\n\n\nread_element_map(exo, init)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_element_variable_names-Tuple{E} where E<:ExodusDatabase","page":"Exodus.jl","title":"Exodus.read_element_variable_names","text":"read_element_variable_names(\n    exo::ExodusDatabase\n) -> Vector{String}\n\n\nread_element_variable_names(exo)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_element_variable_values-Union{Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, Any, Any, Block}} where {M<:Integer, I<:Integer, B<:Integer, F<:Real}","page":"Exodus.jl","title":"Exodus.read_element_variable_values","text":"read_element_variable_values(\n    exo::ExodusDatabase{M<:Integer, I<:Integer, B<:Integer, F<:Real},\n    time_step,\n    variable_index,\n    block::Block\n) -> Vector\n\n\nread_element_variable_values(\n    exo,\n    time_step,\n    variable_index,\n    block\n)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_global_variables-Union{Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, Any, Any}} where {M<:Integer, I<:Integer, B<:Integer, F<:Real}","page":"Exodus.jl","title":"Exodus.read_global_variables","text":"read_global_variables(\n    exo::ExodusDatabase{M<:Integer, I<:Integer, B<:Integer, F<:Real},\n    timestep,\n    num_glob_vars\n) -> Any\n\n\nread_global_variables(exo, timestep, num_glob_vars)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_nodal_variable_names-Tuple{E} where E<:ExodusDatabase","page":"Exodus.jl","title":"Exodus.read_nodal_variable_names","text":"read_nodal_variable_names(\n    exo::ExodusDatabase\n) -> Vector{String}\n\n\nread_nodal_variable_names(exo)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_nodal_variable_values-Union{Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, Any, Any}} where {M<:Integer, I<:Integer, B<:Integer, F<:Real}","page":"Exodus.jl","title":"Exodus.read_nodal_variable_values","text":"read_nodal_variable_values(\n    exo::ExodusDatabase{M<:Integer, I<:Integer, B<:Integer, F<:Real},\n    time_step,\n    variable_index\n) -> Vector\n\n\nread_nodal_variable_values(exo, time_step, variable_index)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_node_set_ids-Union{Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, Initialization}} where {M<:Integer, I<:Integer, B<:Integer, F<:Real}","page":"Exodus.jl","title":"Exodus.read_node_set_ids","text":"read_node_set_ids(\n    exo::ExodusDatabase{M<:Integer, I<:Integer, B<:Integer, F<:Real},\n    init::Initialization\n) -> Vector\n\n\nread_node_set_ids(exo, init)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_node_set_nodes-Union{Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, I}} where {M<:Integer, I<:Integer, B<:Integer, F<:Real}","page":"Exodus.jl","title":"Exodus.read_node_set_nodes","text":"read_node_set_nodes(\n    exo::ExodusDatabase{M<:Integer, I<:Integer, B<:Integer, F<:Real},\n    node_set_id::Integer\n) -> Any\n\n\nread_node_set_nodes(exo, node_set_id)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_node_set_parameters-Union{Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, I}} where {M<:Integer, I<:Integer, B<:Integer, F<:Real}","page":"Exodus.jl","title":"Exodus.read_node_set_parameters","text":"read_node_set_parameters(\n    exo::ExodusDatabase{M<:Integer, I<:Integer, B<:Integer, F<:Real},\n    node_set_id::Integer\n) -> Tuple{Any, Any}\n\n\nread_node_set_parameters(exo, node_set_id)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_node_sets!-Union{Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{Vector{NodeSet}, ExodusDatabase{M, I, B, F}, Vector{I}}} where {M<:Integer, I<:Integer, B<:Integer, F<:Real}","page":"Exodus.jl","title":"Exodus.read_node_sets!","text":"read_node_sets!(\n    node_sets::Vector{NodeSet},\n    exo::ExodusDatabase{M<:Integer, I<:Integer, B<:Integer, F<:Real},\n    node_set_ids::Array{I<:Integer, 1}\n)\n\n\nread_node_sets!(node_sets, exo, node_set_ids)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_node_sets-Union{Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, Array{I}}} where {M<:Integer, I<:Integer, B<:Integer, F<:Real}","page":"Exodus.jl","title":"Exodus.read_node_sets","text":"read_node_sets(\n    exo::ExodusDatabase{M<:Integer, I<:Integer, B<:Integer, F<:Real},\n    node_set_ids::Array{I<:Integer}\n) -> Vector{NodeSet}\n\n\nread_node_sets(exo, node_set_ids)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_number_of_element_variables-Tuple{E} where E<:ExodusDatabase","page":"Exodus.jl","title":"Exodus.read_number_of_element_variables","text":"read_number_of_element_variables(\n    exo::ExodusDatabase\n) -> Int32\n\n\nread_number_of_element_variables(exo)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_number_of_global_variables-Tuple{E} where E<:ExodusDatabase","page":"Exodus.jl","title":"Exodus.read_number_of_global_variables","text":"read_number_of_global_variables(\n    exo::ExodusDatabase\n) -> Int32\n\n\nread_number_of_global_variables(exo)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_number_of_nodal_variables-Tuple{E} where E<:ExodusDatabase","page":"Exodus.jl","title":"Exodus.read_number_of_nodal_variables","text":"read_number_of_nodal_variables(exo::ExodusDatabase) -> Int32\n\n\nread_number_of_nodal_variables(exo)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_number_of_time_steps-Tuple{E} where E<:ExodusDatabase","page":"Exodus.jl","title":"Exodus.read_number_of_time_steps","text":"read_number_of_time_steps(exo::ExodusDatabase) -> Int32\n\n\nread_number_of_time_steps(exo)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_times-Union{Tuple{ExodusDatabase{M, I, B, F}}, Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}} where {M<:Integer, I<:Integer, B<:Integer, F<:Real}","page":"Exodus.jl","title":"Exodus.read_times","text":"read_times(\n    exo::ExodusDatabase{M<:Integer, I<:Integer, B<:Integer, F<:Real}\n) -> Vector\n\n\nread_times(exo)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_coordinate_names-Tuple{ExodusDatabase, Vector{String}}","page":"Exodus.jl","title":"Exodus.write_coordinate_names","text":"write_coordinate_names(\n    exo::ExodusDatabase,\n    coord_names::Vector{String}\n)\n\n\nWork in progress...\n\nwrite_coordinate_names(exo, coord_names)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_coordinates-Union{Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, Matrix{F}}} where {M<:Integer, I<:Integer, B<:Integer, F<:Real}","page":"Exodus.jl","title":"Exodus.write_coordinates","text":"write_coordinates(\n    exo::ExodusDatabase{M<:Integer, I<:Integer, B<:Integer, F<:Real},\n    coords::Array{F<:Real, 2}\n)\n\n\nWork in progress... not that well tested\n\nwrite_coordinates(exo, coords)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_global_variable_values-Union{Tuple{E}, Tuple{E, Any, Any}} where E<:ExodusDatabase","page":"Exodus.jl","title":"Exodus.write_global_variable_values","text":"write_global_variable_values(\n    exo::ExodusDatabase,\n    timestep,\n    var_values\n)\n\n\nwrite_global_variable_values(exo, timestep, var_values)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_initialization!-Union{Tuple{E}, Tuple{E, Initialization}} where E<:ExodusDatabase","page":"Exodus.jl","title":"Exodus.write_initialization!","text":"write_initialization!(\n    exo::ExodusDatabase,\n    init::Initialization\n)\n\n\nwrite_initialization!(exo, init)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_nodal_variable_names-Tuple{Int32, Vector{Int32}, Vector{String}}","page":"Exodus.jl","title":"Exodus.write_nodal_variable_names","text":"write_nodal_variable_names(\n    exo_id::Int32,\n    var_indices::Vector{Int32},\n    var_names::Vector{String}\n)\n\n\nwrite_nodal_variable_names(exo_id, var_indices, var_names)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_nodal_variable_values-Tuple{Int32, Any, Any, Vector{Float64}}","page":"Exodus.jl","title":"Exodus.write_nodal_variable_values","text":"write_nodal_variable_values(\n    exo_id::Int32,\n    time_step,\n    var_index,\n    var_values::Vector{Float64}\n)\n\n\nwrite_nodal_variable_values(\n    exo_id,\n    time_step,\n    var_index,\n    var_values\n)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_number_of_global_variables-Union{Tuple{E}, Tuple{E, Any}} where E<:ExodusDatabase","page":"Exodus.jl","title":"Exodus.write_number_of_global_variables","text":"write_number_of_global_variables(\n    exo::ExodusDatabase,\n    num_vars\n)\n\n\nwrite_number_of_global_variables(exo, num_vars)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_number_of_nodal_variables-Tuple{Int32, Any}","page":"Exodus.jl","title":"Exodus.write_number_of_nodal_variables","text":"write_number_of_nodal_variables(exo_id::Int32, num_vars)\n\n\nwrite_number_of_nodal_variables(exo_id, num_vars)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_time-Union{Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, Any, F}} where {M<:Integer, I<:Integer, B<:Integer, F<:Real}","page":"Exodus.jl","title":"Exodus.write_time","text":"write_time(\n    exo::ExodusDatabase{M<:Integer, I<:Integer, B<:Integer, F<:Real},\n    time_step,\n    time_value::Real\n)\n\n\nwrite_time(exo, time_step, time_value)\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.@exodiff-Tuple{Any, Any}","page":"Exodus.jl","title":"Exodus.@exodiff","text":"\n\n\n\n","category":"macro"}]
}

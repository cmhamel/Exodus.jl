var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = Exodus","category":"page"},{"location":"#Exodus","page":"Home","title":"Exodus","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for Exodus. <!– ","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"–>","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [Exodus]","category":"page"},{"location":"#Exodus.Exodus","page":"Home","title":"Exodus.Exodus","text":"Block\nElementVariable\nExodusDatabase\nGlobalVariable\nInitialization\nNodalVariable\nNodeSet\nNodeSetVariable\nSideSet\nSideSetVariable\nclose\ncollect_block_connectivities\ncopy\ncopy_mesh\ndecomp\nepu\nexodiff\nlength\nread_block\nread_block_id_map\nread_blocks\nread_coordinates\nread_element_type\nread_ids\nread_info\nread_map\nread_name\nread_names\nread_number_of_time_steps\nread_number_of_variables\nread_qa\nread_set\nread_sets\nread_side_set_node_list\nread_time\nread_times\nread_values\nwrite_block\nwrite_blocks\nwrite_coordinates\nwrite_info\nwrite_name\nwrite_names\nwrite_number_of_variables\nwrite_qa\nwrite_set\nwrite_sets\nwrite_time\nwrite_values\n\n\n\n\n\n","category":"module"},{"location":"#Exodus.Block","page":"Home","title":"Exodus.Block","text":"id::Any\nnum_elem::Int64\nnum_nodes_per_elem::Int64\nelem_type::String\nconn::Matrix\n\n\n\n\n\n","category":"type"},{"location":"#Exodus.Block-Tuple{ExodusDatabase, Integer}","page":"Home","title":"Exodus.Block","text":"Init method for block container.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.Block-Tuple{ExodusDatabase, String}","page":"Home","title":"Exodus.Block","text":"\n\n\n\n","category":"method"},{"location":"#Exodus.CommunicationMapParameters","page":"Home","title":"Exodus.CommunicationMapParameters","text":"node_cmap_ids::Vector\nnode_cmap_node_cnts::Vector\nelem_cmap_ids::Vector\nelem_cmap_elem_cnts::Vector\n\n\n\n\n\n","category":"type"},{"location":"#Exodus.CommunicationMapParameters-Union{Tuple{Itype}, Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, Exodus.LoadBalanceParameters{B}, Itype}} where {M, I, B, F, Itype<:Integer}","page":"Home","title":"Exodus.CommunicationMapParameters","text":"\n\n\n\n","category":"method"},{"location":"#Exodus.ElementCommunicationMap","page":"Home","title":"Exodus.ElementCommunicationMap","text":"elem_ids::Vector\nside_ids::Vector\nproc_ids::Vector\n\n\n\n\n\n","category":"type"},{"location":"#Exodus.ElementCommunicationMap-Union{Tuple{Itype}, Tuple{N}, Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{Exodus.ParallelExodusDatabase{M, I, B, F, N}, Itype, Itype}} where {M, I, B, F, N, Itype<:Integer}","page":"Home","title":"Exodus.ElementCommunicationMap","text":"\n\n\n\n","category":"method"},{"location":"#Exodus.ElementVariable","page":"Home","title":"Exodus.ElementVariable","text":"\n\n\n\n","category":"type"},{"location":"#Exodus.ExodusDatabase-Tuple{String, String}","page":"Home","title":"Exodus.ExodusDatabase","text":"\n\n\n\n","category":"method"},{"location":"#Exodus.ExodusDatabase-Union{Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{Int32, String, String, Type{M}, Type{I}, Type{B}, Type{F}}} where {M, I, B, F}","page":"Home","title":"Exodus.ExodusDatabase","text":"\n\n\n\n","category":"method"},{"location":"#Exodus.ExodusError","page":"Home","title":"Exodus.ExodusError","text":"error_code::Int32\nerror_msg::String\n\n\n\n\n\n","category":"type"},{"location":"#Exodus.ExodusWindowsError","page":"Home","title":"Exodus.ExodusWindowsError","text":"\n\n\n\n","category":"type"},{"location":"#Exodus.GlobalVariable","page":"Home","title":"Exodus.GlobalVariable","text":"\n\n\n\n","category":"type"},{"location":"#Exodus.Initialization-Tuple{Type{Int32}}","page":"Home","title":"Exodus.Initialization","text":"Workaround method\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.Initialization-Tuple{Type{Int64}}","page":"Home","title":"Exodus.Initialization","text":"Workaround method\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.Initialization-Union{Tuple{B}, Tuple{Int32, Type{B}}} where B","page":"Home","title":"Exodus.Initialization","text":"\n\n\n\n","category":"method"},{"location":"#Exodus.LoadBalanceParameters","page":"Home","title":"Exodus.LoadBalanceParameters","text":"num_int_nodes::Any\nnum_bor_nodes::Any\nnum_ext_nodes::Any\nnum_int_elems::Any\nnum_bor_elems::Any\nnum_node_cmaps::Any\nnum_elem_cmaps::Any\nprocessor::Int32\n\n\n\n\n\n","category":"type"},{"location":"#Exodus.LoadBalanceParameters-Union{Tuple{Itype}, Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, Itype}} where {M, I, B, F, Itype<:Integer}","page":"Home","title":"Exodus.LoadBalanceParameters","text":"\n\n\n\n","category":"method"},{"location":"#Exodus.ModeException","page":"Home","title":"Exodus.ModeException","text":"mode::String\n\n\n\n\n\n","category":"type"},{"location":"#Exodus.NodalVariable","page":"Home","title":"Exodus.NodalVariable","text":"\n\n\n\n","category":"type"},{"location":"#Exodus.NodeCommunicationMap","page":"Home","title":"Exodus.NodeCommunicationMap","text":"node_ids::Vector\nproc_ids::Vector\n\n\n\n\n\n","category":"type"},{"location":"#Exodus.NodeCommunicationMap-Union{Tuple{Itype}, Tuple{N}, Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{Exodus.ParallelExodusDatabase{M, I, B, F, N}, Itype, Itype}} where {M, I, B, F, N, Itype<:Integer}","page":"Home","title":"Exodus.NodeCommunicationMap","text":"\n\n\n\n","category":"method"},{"location":"#Exodus.NodeSet","page":"Home","title":"Exodus.NodeSet","text":"id::Any\nnodes::Vector\n\n\n\n\n\n","category":"type"},{"location":"#Exodus.NodeSet-Tuple{ExodusDatabase, String}","page":"Home","title":"Exodus.NodeSet","text":"\n\n\n\n","category":"method"},{"location":"#Exodus.NodeSet-Union{Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, Integer}} where {M, I, B, F}","page":"Home","title":"Exodus.NodeSet","text":"\n\n\n\n","category":"method"},{"location":"#Exodus.NodeSetVariable","page":"Home","title":"Exodus.NodeSetVariable","text":"\n\n\n\n","category":"type"},{"location":"#Exodus.ParallelExodusDatabase","page":"Home","title":"Exodus.ParallelExodusDatabase","text":"base_file_name::String\nexos::Array{ExodusDatabase{M, I, B, F}, 1} where {M, I, B, F}\nnem::ExodusDatabase{M, I, B, Float32} where {M, I, B}\nmode::String\ninit_global::Initialization\nlb_params::Array{Exodus.LoadBalanceParameters{B}, 1} where B\ncmap_params::Array{Exodus.CommunicationMapParameters{B}, 1} where B\n\n\n\n\n\n","category":"type"},{"location":"#Exodus.ParallelExodusDatabase-Union{Tuple{Itype}, Tuple{String, Itype}} where Itype<:Integer","page":"Home","title":"Exodus.ParallelExodusDatabase","text":"\n\n\n\n","category":"method"},{"location":"#Exodus.ProcessorElementMaps","page":"Home","title":"Exodus.ProcessorElementMaps","text":"elem_map_internal::Vector\nelem_map_border::Vector\n\n\n\n\n\n","category":"type"},{"location":"#Exodus.ProcessorElementMaps-Union{Tuple{Itype}, Tuple{N}, Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{Exodus.ParallelExodusDatabase{M, I, B, F, N}, Itype}} where {M, I, B, F, N, Itype}","page":"Home","title":"Exodus.ProcessorElementMaps","text":"\n\n\n\n","category":"method"},{"location":"#Exodus.ProcessorNodeMaps","page":"Home","title":"Exodus.ProcessorNodeMaps","text":"node_map_internal::Vector\nnode_map_border::Vector\nnode_map_external::Vector\n\n\n\n\n\n","category":"type"},{"location":"#Exodus.ProcessorNodeMaps-Union{Tuple{Itype}, Tuple{N}, Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{Exodus.ParallelExodusDatabase{M, I, B, F, N}, Itype}} where {M, I, B, F, N, Itype}","page":"Home","title":"Exodus.ProcessorNodeMaps","text":"\n\n\n\n","category":"method"},{"location":"#Exodus.SetIDException","page":"Home","title":"Exodus.SetIDException","text":"exo::ExodusDatabase\ntype::Type\nid::Integer\n\n\n\n\n\n","category":"type"},{"location":"#Exodus.SetNameException","page":"Home","title":"Exodus.SetNameException","text":"exo::ExodusDatabase\ntype::Type\nname::String\n\n\n\n\n\n","category":"type"},{"location":"#Exodus.SideSet","page":"Home","title":"Exodus.SideSet","text":"id::Any\nelements::Vector\nsides::Vector\n\n\n\n\n\n","category":"type"},{"location":"#Exodus.SideSet-Tuple{ExodusDatabase, String}","page":"Home","title":"Exodus.SideSet","text":"\n\n\n\n","category":"method"},{"location":"#Exodus.SideSet-Union{Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, Integer}} where {M, I, B, F}","page":"Home","title":"Exodus.SideSet","text":"\n\n\n\n","category":"method"},{"location":"#Exodus.SideSetVariable","page":"Home","title":"Exodus.SideSetVariable","text":"\n\n\n\n","category":"type"},{"location":"#Exodus.VariableIDException","page":"Home","title":"Exodus.VariableIDException","text":"exo::ExodusDatabase\ntype::Type\nid::Int64\n\n\n\n\n\n","category":"type"},{"location":"#Exodus.VariableNameException","page":"Home","title":"Exodus.VariableNameException","text":"exo::ExodusDatabase\ntype::Type\nname::String\n\n\n\n\n\n","category":"type"},{"location":"#Exodus.ex_entity_id","page":"Home","title":"Exodus.ex_entity_id","text":"\n\n\n\n","category":"type"},{"location":"#Exodus.ex_entity_type","page":"Home","title":"Exodus.ex_entity_type","text":"ex_entity_type\n\nEntity type enums (exentitytype in exodusII.h)\n\n\n\n\n\n","category":"type"},{"location":"#Exodus.ex_inquiry","page":"Home","title":"Exodus.ex_inquiry","text":"ex_inquiry\n\nInquiry enums (ex_inquiry in exodusII.h).\n\n\n\n\n\n","category":"type"},{"location":"#Exodus.void_int","page":"Home","title":"Exodus.void_int","text":"void_int = Cvoid\n\n\n\n\n\n","category":"type"},{"location":"#Base.close-Tuple{Exodus.ParallelExodusDatabase}","page":"Home","title":"Base.close","text":"close(p::Exodus.ParallelExodusDatabase)\n\n\nclose(p)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ParallelExodus.jl:231.\n\n\n\n\n\n","category":"method"},{"location":"#Base.close-Tuple{ExodusDatabase}","page":"Home","title":"Base.close","text":"close(exo::ExodusDatabase)\n\n\nUsed to close and ExodusDatabase.\n\nclose(exo)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ExodusTypes.jl:401.\n\n\n\n\n\n","category":"method"},{"location":"#Base.copy-Union{Tuple{E}, Tuple{E, String}} where E<:ExodusDatabase","page":"Home","title":"Base.copy","text":"copy(exo::ExodusDatabase, new_file_name::String)\n\n\nUsed to copy an ExodusDatabase. As of right now this is the best way to create a new ExodusDatabase for output. Not all of the put methods have been wrapped and properly tested. This one has though.\n\ncopy(exo, new_file_name)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ExodusTypes.jl:410.\n\n\n\n\n\n","category":"method"},{"location":"#Base.length-Tuple{NodeSet}","page":"Home","title":"Base.length","text":"length(n::NodeSet) -> Int64\n\n\nlength(n)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ExodusTypes.jl:602.\n\n\n\n\n\n","category":"method"},{"location":"#Base.length-Tuple{SideSet}","page":"Home","title":"Base.length","text":"length(s::SideSet) -> Int64\n\n\nlength(s)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ExodusTypes.jl:642.\n\n\n\n\n\n","category":"method"},{"location":"#Base.show-Tuple{IO, Exodus.CommunicationMapParameters}","page":"Home","title":"Base.show","text":"show(io::IO, cmap_params::Exodus.CommunicationMapParameters)\n\n\nshow(io, cmap_params)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ParallelExodus.jl:100.\n\n\n\n\n\n","category":"method"},{"location":"#Base.show-Tuple{IO, Exodus.ExodusError}","page":"Home","title":"Base.show","text":"show(io::IO, e::Exodus.ExodusError)\n\n\nshow(io, e)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Errors.jl:10.\n\n\n\n\n\n","category":"method"},{"location":"#Base.show-Tuple{IO, Exodus.LoadBalanceParameters}","page":"Home","title":"Base.show","text":"show(io::IO, init::Exodus.LoadBalanceParameters)\n\n\nshow(io, init)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ParallelExodus.jl:50.\n\n\n\n\n\n","category":"method"},{"location":"#Base.show-Tuple{IO, Exodus.SetIDException}","page":"Home","title":"Base.show","text":"show(io::IO, e::Exodus.SetIDException)\n\n\nshow(io, e)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ExodusTypes.jl:470.\n\n\n\n\n\n","category":"method"},{"location":"#Base.show-Tuple{IO, Exodus.SetNameException}","page":"Home","title":"Base.show","text":"show(io::IO, e::Exodus.SetNameException)\n\n\nshow(io, e)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ExodusTypes.jl:488.\n\n\n\n\n\n","category":"method"},{"location":"#Base.show-Tuple{IO, Exodus.VariableIDException}","page":"Home","title":"Base.show","text":"show(io::IO, e::Exodus.VariableIDException)\n\n\nshow(io, e)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ExodusTypes.jl:506.\n\n\n\n\n\n","category":"method"},{"location":"#Base.show-Tuple{IO, Exodus.VariableNameException}","page":"Home","title":"Base.show","text":"show(io::IO, e::Exodus.VariableNameException)\n\n\nshow(io, e)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ExodusTypes.jl:525.\n\n\n\n\n\n","category":"method"},{"location":"#Base.show-Tuple{IO, Initialization}","page":"Home","title":"Base.show","text":"show(io::IO, init::Initialization)\n\n\nshow(io, init)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ExodusTypes.jl:112.\n\n\n\n\n\n","category":"method"},{"location":"#Base.show-Tuple{IO, NodeSet}","page":"Home","title":"Base.show","text":"show(io::IO, node_set::NodeSet)\n\n\nshow(io, node_set)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ExodusTypes.jl:606.\n\n\n\n\n\n","category":"method"},{"location":"#Base.show-Tuple{IO, SideSet}","page":"Home","title":"Base.show","text":"show(io::IO, sset::SideSet)\n\n\nshow(io, sset)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ExodusTypes.jl:646.\n\n\n\n\n\n","category":"method"},{"location":"#Base.show-Union{Tuple{B}, Tuple{IO, B}} where B<:Block","page":"Home","title":"Base.show","text":"show(io::IO, block::Block)\n\n\nshow(io, block)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ExodusTypes.jl:567.\n\n\n\n\n\n","category":"method"},{"location":"#Base.show-Union{Tuple{N}, Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{IO, Exodus.ParallelExodusDatabase{M, I, B, F, N}}} where {M, I, B, F, N}","page":"Home","title":"Base.show","text":"show(\n    io::IO,\n    exo::Exodus.ParallelExodusDatabase{M, I, B, F, N}\n)\n\n\nshow(io, exo)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ParallelExodus.jl:200.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.InitializationGlobal-Union{Tuple{ExodusDatabase{M, I, B, F}}, Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}} where {M, I, B, F}","page":"Home","title":"Exodus.InitializationGlobal","text":"InitializationGlobal(\n    exo::ExodusDatabase{M, I, B, F}\n) -> Initialization\n\n\nInitializationGlobal(exo)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ParallelExodus.jl:18.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.collect_block_connectivities-Tuple{ExodusDatabase, Vector{<:Integer}}","page":"Home","title":"Exodus.collect_block_connectivities","text":"collect_block_connectivities(\n    exo::ExodusDatabase,\n    block_ids::Vector{<:Integer}\n) -> Any\n\n\nTODO reduce allocations and check for type instabilities\n\ncollect_block_connectivities(exo, block_ids)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Blocks.jl:181.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.collect_block_connectivities-Tuple{ExodusDatabase}","page":"Home","title":"Exodus.collect_block_connectivities","text":"collect_block_connectivities(exo::ExodusDatabase) -> Any\n\n\ncollect_block_connectivities(exo)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Blocks.jl:189.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.copy_mesh-Tuple{String, String}","page":"Home","title":"Exodus.copy_mesh","text":"copy_mesh(file_name::String, new_file_name::String)\n\n\nSimpler copy method to only copy a mesh for output later on\n\ncopy_mesh(file_name, new_file_name)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ExodusTypes.jl:429.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.decomp-Union{Tuple{I}, Tuple{String, I}} where I<:Integer","page":"Home","title":"Exodus.decomp","text":"decomp(file_name::String, n_procs::Integer) -> Any\n\n\ndecomp(file_name, n_procs)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Decomp.jl:87.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.epu-Tuple{String}","page":"Home","title":"Exodus.epu","text":"epu(file_name::String) -> Any\n\n\nepu(file_name)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Epu.jl:18.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.exodiff-Tuple{String, String}","page":"Home","title":"Exodus.exodiff","text":"exodiff(ex_1::String, ex_2::String) -> Any\n\n\nexodiff(ex_1, ex_2)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ExoDiff.jl:18.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.exodus_error_check-Union{Tuple{T}, Tuple{T, String}} where T<:Integer","page":"Home","title":"Exodus.exodus_error_check","text":"exodus_error_check(error_code::Integer, method_name::String)\n\n\nGeneric error handling method.\n\nArguments\n\nerror_code::T: error code, usually negative means something went bad\nmethod_name::String: method name that called this\n\nexodus_error_check(error_code, method_name)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Errors.jl:19.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.int_and_float_modes-Tuple{Int32}","page":"Home","title":"Exodus.int_and_float_modes","text":"int_and_float_modes(exo::Int32) -> NTuple{4, Type}\n\n\nint_and_float_modes(exo)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ExodusTypes.jl:30.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_block-Tuple{ExodusDatabase, Integer}","page":"Home","title":"Exodus.read_block","text":"read_block(exo::ExodusDatabase, block_id::Integer) -> Block\n\n\nread_block(exo, block_id)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Blocks.jl:106.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_block-Tuple{ExodusDatabase, String}","page":"Home","title":"Exodus.read_block","text":"read_block(exo::ExodusDatabase, block_name::String) -> Block\n\n\nread_block(exo, block_name)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Blocks.jl:110.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_block_connectivity-Union{Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, Integer, Integer}} where {M, I, B, F}","page":"Home","title":"Exodus.read_block_connectivity","text":"read_block_connectivity(\n    exo::ExodusDatabase{M, I, B, F},\n    block_id::Integer,\n    conn_length::Integer\n) -> Vector\n\n\nread_block_connectivity(exo, block_id, conn_length)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Blocks.jl:47.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_block_id_map-Union{Tuple{I}, Tuple{ExodusDatabase, I}} where I<:Integer","page":"Home","title":"Exodus.read_block_id_map","text":"read_block_id_map(\n    exo::ExodusDatabase,\n    block_id::Integer\n) -> Vector\n\n\nread_block_id_map(exo, block_id)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Blocks.jl:3.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_block_parameters-Union{Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, Integer}} where {M, I, B, F}","page":"Home","title":"Exodus.read_block_parameters","text":"read_block_parameters(\n    exo::ExodusDatabase{M, I, B, F},\n    block_id::Integer\n) -> Tuple{String, Vararg{Any, 5}}\n\n\nread_block_parameters(exo, block_id)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Blocks.jl:24.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_blocks!-Union{Tuple{I}, Tuple{B}, Tuple{Vector{B}, ExodusDatabase, Vector{I}}} where {B<:Block, I<:Integer}","page":"Home","title":"Exodus.read_blocks!","text":"read_blocks!(\n    blocks::Array{B<:Block, 1},\n    exo::ExodusDatabase,\n    block_ids::Array{I<:Integer, 1}\n)\n\n\nTODO: change name to readelementblocks!\n\nread_blocks!(blocks, exo, block_ids)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Blocks.jl:115.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_blocks-Union{Tuple{U}, Tuple{ExodusDatabase, U}} where U<:(Union{Vector{<:Integer}, var\"#s144\"} where var\"#s144\"<:Integer)","page":"Home","title":"Exodus.read_blocks","text":"read_blocks(\n    exo::ExodusDatabase,\n    block_ids::Union{Vector{<:Integer}, var\"#s144\"} where var\"#s144\"<:Integer\n) -> Any\n\n\nHelper method for initializing blocks.\n\nTODO: change name to readelementblocks\n\nread_blocks(exo, block_ids)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Blocks.jl:128.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_coordinate_names-Tuple{ExodusDatabase}","page":"Home","title":"Exodus.read_coordinate_names","text":"read_coordinate_names(exo::ExodusDatabase) -> Any\n\n\nMethod to read coordinates names Returns a vector of strings\n\nread_coordinate_names(exo)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Coordinates.jl:142.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_coordinates-Tuple{Exodus.ParallelExodusDatabase}","page":"Home","title":"Exodus.read_coordinates","text":"read_coordinates(exo::Exodus.ParallelExodusDatabase) -> Any\n\n\nread_coordinates(exo)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ParallelExodus.jl:355.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_coordinates-Tuple{ExodusDatabase}","page":"Home","title":"Exodus.read_coordinates","text":"read_coordinates(exo::ExodusDatabase) -> Matrix\n\n\nMethod to read coordinates.  Returns a matrix that is ndim x nnodes.\n\nread_coordinates(exo)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Coordinates.jl:5.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_element_type-Union{Tuple{I}, Tuple{ExodusDatabase, I}} where I<:Integer","page":"Home","title":"Exodus.read_element_type","text":"read_element_type(\n    exo::ExodusDatabase,\n    block_id::Integer\n) -> String\n\n\nread_element_type(exo, block_id)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Blocks.jl:95.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_ids-Union{Tuple{T}, Tuple{Exodus.ParallelExodusDatabase, Type{T}}} where T<:Exodus.AbstractSet","page":"Home","title":"Exodus.read_ids","text":"read_ids(\n    exo::Exodus.ParallelExodusDatabase,\n    type::Type{T<:Exodus.AbstractSet}\n) -> Any\n\n\nread_ids(exo, type)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ParallelExodus.jl:360.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_info-Tuple{ExodusDatabase}","page":"Home","title":"Exodus.read_info","text":"read_info(exo::ExodusDatabase) -> Vector{String}\n\n\nread_info(exo)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Info.jl:3.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_init_info-Tuple{ExodusDatabase}","page":"Home","title":"Exodus.read_init_info","text":"read_init_info(\n    exo::ExodusDatabase\n) -> Tuple{Int32, Int32, String}\n\n\nread_init_info(exo)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ParallelExodus.jl:3.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_map-Tuple{ExodusDatabase}","page":"Home","title":"Exodus.read_map","text":"read_map(exo::ExodusDatabase) -> Vector\n\n\nread_map(exo)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Maps.jl:3.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_name-Union{Tuple{S}, Tuple{ExodusDatabase, Type{S}, Integer}} where S<:Exodus.AbstractSet","page":"Home","title":"Exodus.read_name","text":"read_name(\n    exo::ExodusDatabase,\n    _::Type{S<:Exodus.AbstractSet},\n    id::Integer\n) -> String\n\n\nread_name(exo, _, id)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Sets.jl:26.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_name-Union{Tuple{V}, Tuple{ExodusDatabase, Type{V}, Integer}} where V<:Exodus.AbstractVariable","page":"Home","title":"Exodus.read_name","text":"read_name(\n    exo::ExodusDatabase,\n    _::Type{V<:Exodus.AbstractVariable},\n    var_index::Integer\n) -> String\n\n\nGeneral method to read the name of a variable in index var_index  for a given variable type V.\n\nExamples: julia> readname(exo, ElementVariable, 1) \"stressxx\"\n\njulia> readname(exo, GlobalVariable, 2) \"reactionforce\"\n\njulia> readname(exo, NodalVariable, 1) \"displx\"\n\njulia> readname(exo, NodeSetVariable, 1) \"nsetdispl_x\"\n\njulia> read_name(exo, SideSetVariable, 1) \"pressure\"\n\nread_name(exo, _, var_index)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Variables.jl:49.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_names-Union{Tuple{S}, Tuple{ExodusDatabase, Type{S}}} where S<:Exodus.AbstractSet","page":"Home","title":"Exodus.read_names","text":"read_names(\n    exo::ExodusDatabase,\n    _::Type{S<:Exodus.AbstractSet}\n) -> Vector{String}\n\n\nread_names(exo, _)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Sets.jl:53.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_names-Union{Tuple{T}, Tuple{Exodus.ParallelExodusDatabase, Type{T}}} where T<:Union{Exodus.AbstractVariable, Exodus.AbstractSet}","page":"Home","title":"Exodus.read_names","text":"read_names(\n    exo::Exodus.ParallelExodusDatabase,\n    type::Type{T<:Union{Exodus.AbstractVariable, Exodus.AbstractSet}}\n) -> Any\n\n\nread_names(exo, type)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ParallelExodus.jl:365.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_names-Union{Tuple{V}, Tuple{ExodusDatabase, Type{V}}} where V<:Exodus.AbstractVariable","page":"Home","title":"Exodus.read_names","text":"read_names(\n    exo::ExodusDatabase,\n    _::Type{V<:Exodus.AbstractVariable}\n) -> Vector{String}\n\n\nGeneral method to read the names of variables for a given variable type V.\n\nExamples: julia> readnames(exo, ElementVariable) \"stressxx\" \"stressyy\" \"stresszz\" \"stressxy\" \"stressyz\" \"stress_zx\"\n\njulia> readnames(exo, GlobalVariable) \"globaldispl\" \"reaction_force\"\n\njulia> readnames(exo, NodalVariable) \"displx\" \"disply\" \"displz\"\n\njulia> readname(exo, NodeSetVariable) \"nsetdisplx\" \"nsetdisply\" \"nsetdispl_z\"\n\njulia> read_name(exo, SideSetVariable) \"pressure\"\n\nread_names(exo, _)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Variables.jl:91.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_node_set_nodes-Union{Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, Integer}} where {M, I, B, F}","page":"Home","title":"Exodus.read_node_set_nodes","text":"read_node_set_nodes(\n    exo::ExodusDatabase{M, I, B, F},\n    set_id::Integer\n) -> Vector\n\n\nread_node_set_nodes(exo, set_id)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Sets.jl:83.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_number_of_time_steps-Tuple{ExodusDatabase}","page":"Home","title":"Exodus.read_number_of_time_steps","text":"read_number_of_time_steps(exo::ExodusDatabase) -> UInt32\n\n\nread_number_of_time_steps(exo)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Times.jl:3.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_number_of_variables-Union{Tuple{T}, Tuple{Exodus.ParallelExodusDatabase, Type{T}}} where T<:Exodus.AbstractVariable","page":"Home","title":"Exodus.read_number_of_variables","text":"read_number_of_variables(\n    exo::Exodus.ParallelExodusDatabase,\n    type::Type{T<:Exodus.AbstractVariable}\n) -> Any\n\n\nread_number_of_variables(exo, type)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ParallelExodus.jl:380.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_number_of_variables-Union{Tuple{V}, Tuple{ExodusDatabase, Type{V}}} where V<:Exodus.AbstractVariable","page":"Home","title":"Exodus.read_number_of_variables","text":"read_number_of_variables(\n    exo::ExodusDatabase,\n    _::Type{V<:Exodus.AbstractVariable}\n) -> Int32\n\n\nGeneral method to read the number of variables for a given variable type V.\n\nExamples: julia> readnumberof_variables(exo, ElementVariable) 6\n\njulia> readnumberof_variables(exo, GlobalVariable) 5\n\njulia> readnumberof_variables(exo, NodalVariable) 3\n\njulia> readnumberof_variables(exo, NodeSetVariable) 3\n\njulia> readnumberof_variables(exo, SideSetVariable) 6\n\nread_number_of_variables(exo, _)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Variables.jl:20.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_partial_block_connectivity-Union{Tuple{I}, Tuple{ExodusDatabase, I, I, I}} where I<:Integer","page":"Home","title":"Exodus.read_partial_block_connectivity","text":"read_partial_block_connectivity(\n    exo::ExodusDatabase,\n    block_id::Integer,\n    start_num::Integer,\n    num_ent::Integer\n) -> Any\n\n\nread_partial_block_connectivity(\n    exo,\n    block_id,\n    start_num,\n    num_ent\n)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Blocks.jl:78.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_partial_coordinates-Union{Tuple{I}, Tuple{ExodusDatabase, I, I}} where I<:Integer","page":"Home","title":"Exodus.read_partial_coordinates","text":"read_partial_coordinates(\n    exo::ExodusDatabase,\n    start_node_num::Integer,\n    num_nodes::Integer\n) -> Matrix\n\n\nMethod to read a partial set of coordinates that are contiguous.  Returns a matrix that is ndim x nnodes\n\nread_partial_coordinates(exo, start_node_num, num_nodes)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Coordinates.jl:49.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_partial_coordinates_component-Union{Tuple{I}, Tuple{ExodusDatabase, I, I, I}} where I<:Integer","page":"Home","title":"Exodus.read_partial_coordinates_component","text":"read_partial_coordinates_component(\n    exo::ExodusDatabase,\n    start_node_num::Integer,\n    num_nodes::Integer,\n    component::Integer\n) -> Vector\n\n\nMethod to read a specific component of a partial set of coordinates that are contiguous.  Returns a vector of length n_nodes\n\nread_partial_coordinates_component(\n    exo,\n    start_node_num,\n    num_nodes,\n    component\n)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Coordinates.jl:108.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_qa-Tuple{ExodusDatabase}","page":"Home","title":"Exodus.read_qa","text":"read_qa(exo::ExodusDatabase) -> Matrix{String}\n\n\nread_qa(exo)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/QA.jl:3.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_set-Union{Tuple{I}, Tuple{S}, Tuple{ExodusDatabase, Type{S}, I}} where {S<:Exodus.AbstractSet, I}","page":"Home","title":"Exodus.read_set","text":"read_set(\n    exo::ExodusDatabase,\n    type::Type{S<:Exodus.AbstractSet},\n    set_id\n) -> Any\n\n\nread_set(exo, type, set_id)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Sets.jl:158.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_set-Union{Tuple{I}, Tuple{T}, Tuple{Exodus.ParallelExodusDatabase, Type{T}, I}} where {T, I}","page":"Home","title":"Exodus.read_set","text":"read_set(\n    exo::Exodus.ParallelExodusDatabase,\n    type::Type{T},\n    id\n) -> Any\n\n\nread_set(exo, type, id)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ParallelExodus.jl:370.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_set_parameters-Union{Tuple{S}, Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, Integer, Type{S}}} where {M, I, B, F, S<:Exodus.AbstractSet}","page":"Home","title":"Exodus.read_set_parameters","text":"read_set_parameters(\n    exo::ExodusDatabase{M, I, B, F},\n    set_id::Integer,\n    _::Type{S<:Exodus.AbstractSet}\n) -> Tuple{Any, Any}\n\n\nread_set_parameters(exo, set_id, _)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Sets.jl:70.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_sets!-Union{Tuple{I}, Tuple{T}, Tuple{Vector{T}, ExodusDatabase, Vector{I}}} where {T<:Exodus.AbstractSet, I}","page":"Home","title":"Exodus.read_sets!","text":"read_sets!(\n    sets::Array{T<:Exodus.AbstractSet, 1},\n    exo::ExodusDatabase,\n    ids::Array{I, 1}\n)\n\n\nread_sets!(sets, exo, ids)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Sets.jl:164.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_sets-Union{Tuple{S}, Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, Type{S}}} where {M, I, B, F, S<:Exodus.AbstractSet}","page":"Home","title":"Exodus.read_sets","text":"read_sets(\n    exo::ExodusDatabase{M, I, B, F},\n    type::Type{S<:Exodus.AbstractSet}\n) -> Vector\n\n\nread_sets(exo, type)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Sets.jl:180.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_sets-Union{Tuple{T}, Tuple{Exodus.ParallelExodusDatabase, Type{T}}} where T<:Exodus.AbstractSet","page":"Home","title":"Exodus.read_sets","text":"read_sets(\n    exo::Exodus.ParallelExodusDatabase,\n    type::Type{T<:Exodus.AbstractSet}\n) -> Any\n\n\nread_sets(exo, type)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ParallelExodus.jl:375.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_side_set_elements_and_sides-Union{Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, Integer}} where {M, I, B, F}","page":"Home","title":"Exodus.read_side_set_elements_and_sides","text":"read_side_set_elements_and_sides(\n    exo::ExodusDatabase{M, I, B, F},\n    set_id::Integer\n) -> Tuple{Vector, Vector}\n\n\nread_side_set_elements_and_sides(exo, set_id)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Sets.jl:103.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_side_set_node_list-Union{Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, Integer}} where {M, I, B, F}","page":"Home","title":"Exodus.read_side_set_node_list","text":"read_side_set_node_list(\n    exo::ExodusDatabase{M, I, B, F},\n    side_set_id::Integer\n) -> Tuple{Vector, Vector}\n\n\nUNTESTED\n\nread_side_set_node_list(exo, side_set_id)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Sets.jl:128.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_time-Union{Tuple{I}, Tuple{ExodusDatabase, I}} where I<:Integer","page":"Home","title":"Exodus.read_time","text":"read_time(exo::ExodusDatabase, time_step::Integer) -> Any\n\n\nTODO figure out how to make this not use a vector of length 1 - either a ref or a ptr\n\nread_time(exo, time_step)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Times.jl:12.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_times-Tuple{ExodusDatabase}","page":"Home","title":"Exodus.read_times","text":"read_times(exo::ExodusDatabase) -> Vector\n\n\nread_times(exo)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Times.jl:23.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_values-Tuple{Exodus.ParallelExodusDatabase, Type{GlobalVariable}, Integer}","page":"Home","title":"Exodus.read_values","text":"read_values(\n    exo::Exodus.ParallelExodusDatabase,\n    t::Type{GlobalVariable},\n    timestep::Integer\n) -> Any\n\n\nWrapper method for global variables around the main readvalues method readvalues(exo::ParallelExodusDatabase, t::Type{GlobalVariable}, timestep::Integer) = read_values(exo, (t,), (timestep,), (1,), (1,))\n\nExample: read_values(exo, GlobalVariable, 1)\n\nread_values(exo, t, timestep)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ParallelExodus.jl:396.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_values-Tuple{Exodus.ParallelExodusDatabase, Type{NodalVariable}, Integer, Integer}","page":"Home","title":"Exodus.read_values","text":"read_values(\n    exo::Exodus.ParallelExodusDatabase,\n    t::Type{NodalVariable},\n    timestep::Integer,\n    index::Integer\n) -> Any\n\n\nWrapper method for nodal variables\n\nread_values(exo, t, timestep, index)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ParallelExodus.jl:402.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_values-Tuple{Exodus.ParallelExodusDatabase, Type{NodalVariable}, Integer, String}","page":"Home","title":"Exodus.read_values","text":"read_values(\n    exo::Exodus.ParallelExodusDatabase,\n    t::Type{NodalVariable},\n    timestep::Integer,\n    name::String\n) -> Any\n\n\nWrapper method for nodal variables\n\nread_values(exo, t, timestep, name)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ParallelExodus.jl:413.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_values-Tuple{ExodusDatabase, Type{GlobalVariable}, Integer}","page":"Home","title":"Exodus.read_values","text":"read_values(\n    exo::ExodusDatabase,\n    t::Type{GlobalVariable},\n    timestep::Integer\n) -> Vector\n\n\nWrapper method for global variables around the main readvalues method readvalues(exo::ExodusDatabase, t::Type{GlobalVariable}, timestep::Integer) = read_values(exo, t, timestep, 1, 1)\n\nExample: read_values(exo, GlobalVariable, 1)\n\nread_values(exo, t, timestep)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Variables.jl:192.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_values-Tuple{ExodusDatabase, Type{NodalVariable}, Integer, Integer}","page":"Home","title":"Exodus.read_values","text":"read_values(\n    exo::ExodusDatabase,\n    t::Type{NodalVariable},\n    timestep::Integer,\n    index::Integer\n) -> Vector\n\n\nWrapper method for nodal variables\n\nread_values(exo, t, timestep, index)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Variables.jl:197.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_values-Tuple{ExodusDatabase, Type{NodalVariable}, Integer, String}","page":"Home","title":"Exodus.read_values","text":"read_values(\n    exo::ExodusDatabase,\n    t::Type{NodalVariable},\n    timestep::Integer,\n    name::String\n) -> Vector\n\n\nWrapper method for nodal variables\n\nread_values(exo, t, timestep, name)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Variables.jl:213.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_values-Union{Tuple{T}, Tuple{Exodus.ParallelExodusDatabase, Type{T}, Int64, Int64, Int64}} where T<:Exodus.AbstractSet","page":"Home","title":"Exodus.read_values","text":"read_values(\n    exo::Exodus.ParallelExodusDatabase,\n    type::Type{T<:Exodus.AbstractSet},\n    time_step::Int64,\n    id::Int64,\n    var_index::Int64\n) -> Any\n\n\nread_values(exo, type, time_step, id, var_index)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ParallelExodus.jl:385.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_values-Union{Tuple{V}, Tuple{Exodus.ParallelExodusDatabase, Type{V}, Integer, Integer, String}} where V<:Exodus.AbstractVariable","page":"Home","title":"Exodus.read_values","text":"read_values(\n    exo::Exodus.ParallelExodusDatabase,\n    type::Type{V<:Exodus.AbstractVariable},\n    time_step::Integer,\n    id::Integer,\n    var_name::String\n) -> Any\n\n\nread_values(exo, type, time_step, id, var_name)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ParallelExodus.jl:407.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_values-Union{Tuple{V}, Tuple{Exodus.ParallelExodusDatabase, Type{V}, Integer, String, String}} where V<:Exodus.AbstractVariable","page":"Home","title":"Exodus.read_values","text":"read_values(\n    exo::Exodus.ParallelExodusDatabase,\n    type::Type{V<:Exodus.AbstractVariable},\n    time_step::Integer,\n    set_name::String,\n    var_name::String\n)\n\n\nread_values(exo, type, time_step, set_name, var_name)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ParallelExodus.jl:421.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_values-Union{Tuple{V}, Tuple{ExodusDatabase, Type{V}, Integer, Integer, String}} where V<:Union{ElementVariable, NodalVariable, NodeSetVariable, SideSetVariable}","page":"Home","title":"Exodus.read_values","text":"read_values(\n    exo::ExodusDatabase,\n    _::Type{V<:Union{ElementVariable, NodalVariable, NodeSetVariable, SideSetVariable}},\n    time_step::Integer,\n    id::Integer,\n    var_name::String\n) -> Vector\n\n\nread_values(exo, _, time_step, id, var_name)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Variables.jl:202.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_values-Union{Tuple{V}, Tuple{ExodusDatabase, Type{V}, Integer, String, String}} where V<:Union{ElementVariable, NodeSetVariable, SideSetVariable}","page":"Home","title":"Exodus.read_values","text":"read_values(\n    exo::ExodusDatabase,\n    _::Type{V<:Union{ElementVariable, NodeSetVariable, SideSetVariable}},\n    time_step::Integer,\n    set_name::String,\n    var_name::String\n) -> Vector\n\n\nread_values(exo, _, time_step, set_name, var_name)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Variables.jl:218.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.read_values-Union{Tuple{V}, Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, Type{V}, Integer, Integer, Integer}} where {M, I, B, F, V<:Exodus.AbstractVariable}","page":"Home","title":"Exodus.read_values","text":"read_values(\n    exo::ExodusDatabase{M, I, B, F},\n    _::Type{V<:Exodus.AbstractVariable},\n    timestep::Integer,\n    id::Integer,\n    var_index::Integer\n) -> Vector\n\n\nGeneral method to read variable values.\n\nread_values(exo, _, timestep, id, var_index)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Variables.jl:128.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.set_exodus_max_name_length-Tuple{Int32, Int32}","page":"Home","title":"Exodus.set_exodus_max_name_length","text":"set_exodus_max_name_length(exoid::Int32, len::Int32)\n\n\nset_exodus_max_name_length(exoid, len)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ExodusTypes.jl:21.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.set_exodus_options-Tuple{T} where T","page":"Home","title":"Exodus.set_exodus_options","text":"set_exodus_options(options)\n\n\nset_exodus_options(options)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ExodusTypes.jl:14.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_block-Tuple{ExodusDatabase, Block}","page":"Home","title":"Exodus.write_block","text":"write_block(exo::ExodusDatabase, block::Block)\n\n\nWARNING: currently does not support edges, faces and attributes\n\nwrite_block(exo, block)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Blocks.jl:145.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_block_connectivity-Union{Tuple{I}, Tuple{ExodusDatabase, Integer, Matrix{I}}} where I<:Integer","page":"Home","title":"Exodus.write_block_connectivity","text":"write_block_connectivity(\n    exo::ExodusDatabase,\n    block_id::Integer,\n    conn::Array{I<:Integer, 2}\n)\n\n\nwrite_block_connectivity(exo, block_id, conn)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Blocks.jl:61.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_blocks-Tuple{ExodusDatabase, Vector{<:Block}}","page":"Home","title":"Exodus.write_blocks","text":"write_blocks(exo::ExodusDatabase, blocks::Vector{<:Block})\n\n\nwrite_blocks(exo, blocks)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Blocks.jl:171.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_coordinate_names-Tuple{ExodusDatabase, Vector{String}}","page":"Home","title":"Exodus.write_coordinate_names","text":"write_coordinate_names(\n    exo::ExodusDatabase,\n    coord_names::Vector{String}\n)\n\n\nMethod to write coordinate names, e.g. x, y, z\n\nwrite_coordinate_names(exo, coord_names)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Coordinates.jl:201.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_coordinates-Union{Tuple{F}, Tuple{ExodusDatabase, VecOrMat{F}}} where F<:AbstractFloat","page":"Home","title":"Exodus.write_coordinates","text":"write_coordinates(\n    exo::ExodusDatabase,\n    coords::Union{Array{F<:AbstractFloat, 1}, Array{F<:AbstractFloat, 2}}\n)\n\n\nMethod to write coordinates\n\nwrite_coordinates(exo, coords)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Coordinates.jl:160.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_info-Tuple{ExodusDatabase, Vector{String}}","page":"Home","title":"Exodus.write_info","text":"write_info(exo::ExodusDatabase, info::Vector{String})\n\n\nwrite_info(exo, info)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Info.jl:24.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_initialization!-Tuple{Int32, Initialization}","page":"Home","title":"Exodus.write_initialization!","text":"write_initialization!(exoid::Int32, init::Initialization)\n\n\nUsed to set up a exodus database in write mode\n\nThe ccall signatures should reall be B (bulk int type of exo) instead of Clonglong\n\nwrite_initialization!(exoid, init)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/ExodusTypes.jl:128.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_name-Union{Tuple{S}, Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, S, String}} where {M, I, B, F, S<:Exodus.AbstractSet}","page":"Home","title":"Exodus.write_name","text":"write_name(\n    exo::ExodusDatabase{M, I, B, F},\n    set::Exodus.AbstractSet,\n    name::String\n)\n\n\nwrite_name(exo, set, name)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Sets.jl:248.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_name-Union{Tuple{S}, Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, Type{S}, Integer, String}} where {M, I, B, F, S<:Exodus.AbstractSet}","page":"Home","title":"Exodus.write_name","text":"write_name(\n    exo::ExodusDatabase{M, I, B, F},\n    _::Type{S<:Exodus.AbstractSet},\n    set_id::Integer,\n    name::String\n)\n\n\nwrite_name(exo, _, set_id, name)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Sets.jl:229.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_name-Union{Tuple{V}, Tuple{ExodusDatabase, Type{V}, Integer, String}} where V<:Exodus.AbstractVariable","page":"Home","title":"Exodus.write_name","text":"write_name(\n    exo::ExodusDatabase,\n    _::Type{V<:Exodus.AbstractVariable},\n    var_index::Integer,\n    var_name::String\n)\n\n\nwrite_name(exo, _, var_index, var_name)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Variables.jl:288.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_names-Union{Tuple{S}, Tuple{ExodusDatabase, Type{S}, Vector{String}}} where S<:Exodus.AbstractSet","page":"Home","title":"Exodus.write_names","text":"write_names(\n    exo::ExodusDatabase,\n    _::Type{S<:Exodus.AbstractSet},\n    names::Vector{String}\n)\n\n\nWARNING: this methods likely does not have good safe guards\n\nwrite_names(exo, _, names)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Sets.jl:267.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_names-Union{Tuple{V}, Tuple{ExodusDatabase, Type{V}, Vector{String}}} where V<:Exodus.AbstractVariable","page":"Home","title":"Exodus.write_names","text":"write_names(\n    exo::ExodusDatabase,\n    type::Type{V<:Exodus.AbstractVariable},\n    var_names::Vector{String}\n)\n\n\nwrite_names(exo, type, var_names)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Variables.jl:302.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_number_of_variables-Union{Tuple{V}, Tuple{ExodusDatabase, Type{V}, Integer}} where V<:Exodus.AbstractVariable","page":"Home","title":"Exodus.write_number_of_variables","text":"write_number_of_variables(\n    exo::ExodusDatabase,\n    _::Type{V<:Exodus.AbstractVariable},\n    num_vars::Integer\n)\n\n\nGeneral method to write the number of variables for a given variable type V.\n\nExamples: julia> writenumberof_variables(exo, ElementVariable, 6)\n\njulia> writenumberof_variables(exo, GlobalVariable, 5)\n\njulia> writenumberof_variables(exo, NodalVariable, 3)\n\njulia> writenumberof_variables(exo, NodeSetVariable, 3)\n\njulia> writenumberof_variables(exo, SideSetVariable, 6)\n\nwrite_number_of_variables(exo, _, num_vars)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Variables.jl:279.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_partial_coordinates-Union{Tuple{F}, Tuple{I}, Tuple{ExodusDatabase, I, VecOrMat{F}}} where {I<:Integer, F<:AbstractFloat}","page":"Home","title":"Exodus.write_partial_coordinates","text":"write_partial_coordinates(\n    exo::ExodusDatabase,\n    start_node_num::Integer,\n    coords::Union{Array{F<:AbstractFloat, 1}, Array{F<:AbstractFloat, 2}}\n)\n\n\nwrite_partial_coordinates(exo, start_node_num, coords)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Coordinates.jl:212.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_partial_coordinates_component-Union{Tuple{F}, Tuple{I}, Tuple{ExodusDatabase, I, I, Vector{F}}} where {I<:Integer, F<:AbstractFloat}","page":"Home","title":"Exodus.write_partial_coordinates_component","text":"write_partial_coordinates_component(\n    exo::ExodusDatabase,\n    start_node_num::Integer,\n    component::Integer,\n    coords::Array{F<:AbstractFloat, 1}\n)\n\n\nwrite_partial_coordinates_component(\n    exo,\n    start_node_num,\n    component,\n    coords\n)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Coordinates.jl:239.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_partial_coordinates_component-Union{Tuple{F}, Tuple{I}, Tuple{ExodusDatabase, I, String, Vector{F}}} where {I<:Integer, F<:AbstractFloat}","page":"Home","title":"Exodus.write_partial_coordinates_component","text":"write_partial_coordinates_component(\n    exo::ExodusDatabase,\n    start_node_num::Integer,\n    component::String,\n    coords::Array{F<:AbstractFloat, 1}\n)\n\n\nwrite_partial_coordinates_component(\n    exo,\n    start_node_num,\n    component,\n    coords\n)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Coordinates.jl:250.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_qa-Tuple{ExodusDatabase, Matrix{String}}","page":"Home","title":"Exodus.write_qa","text":"write_qa(exo::ExodusDatabase, qa_record::Matrix{String})\n\n\nwrite_qa(exo, qa_record)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/QA.jl:29.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_set-Union{Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{T}, Tuple{ExodusDatabase{M, I, B, F}, T}} where {T<:Exodus.AbstractSet, M, I, B, F}","page":"Home","title":"Exodus.write_set","text":"write_set(\n    exo::ExodusDatabase{M, I, B, F},\n    set::Exodus.AbstractSet\n)\n\n\nTyping ensures we don't write a set with non-matching types to the exodus file.\n\nwrite_set(exo, set)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Sets.jl:210.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_set_parameters-Union{Tuple{T}, Tuple{F}, Tuple{B}, Tuple{I}, Tuple{M}, Tuple{ExodusDatabase{M, I, B, F}, T}} where {M, I, B, F, T<:Exodus.AbstractSet}","page":"Home","title":"Exodus.write_set_parameters","text":"write_set_parameters(\n    exo::ExodusDatabase{M, I, B, F},\n    set::Exodus.AbstractSet\n)\n\n\nWARNING: currently doesn't support distance factors\n\nwrite_set_parameters(exo, set)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Sets.jl:197.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_sets-Union{Tuple{T}, Tuple{ExodusDatabase, Vector{T}}} where T<:Exodus.AbstractSet","page":"Home","title":"Exodus.write_sets","text":"write_sets(\n    exo::ExodusDatabase,\n    sets::Array{T<:Exodus.AbstractSet, 1}\n)\n\n\nwrite_sets(exo, sets)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Sets.jl:221.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_time-Union{Tuple{F}, Tuple{I}, Tuple{ExodusDatabase, I, F}} where {I<:Integer, F<:AbstractFloat}","page":"Home","title":"Exodus.write_time","text":"write_time(\n    exo::ExodusDatabase,\n    time_step::Integer,\n    time_value::AbstractFloat\n)\n\n\nwrite_time(exo, time_step, time_value)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Times.jl:33.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_values-Tuple{ExodusDatabase, Type{GlobalVariable}, Integer, Vector{<:AbstractFloat}}","page":"Home","title":"Exodus.write_values","text":"write_values(\n    exo::ExodusDatabase,\n    t::Type{GlobalVariable},\n    timestep::Integer,\n    var_values::Vector{<:AbstractFloat}\n)\n\n\nWrapper method for global variables around the main writevalues method writevalues(   exo::ExodusDatabase, t::Type{GlobalVariable},    timestep::Integer, varvalues::Vector{<:AbstractFloat} ) = writevalues(exo, t, timestep, 1, 1, var_values)\n\nNote: you need to first run writenumberof_variables(exo, GlobalVariable, n) where n is the number of variables.\n\nExample: writenumberofvariables(exo, GlobalVariable, 5) writevalues(exo, GlobalVariable, 1, [10.0, 20.0, 30.0, 40.0, 50.0])\n\nwrite_values(exo, t, timestep, var_values)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Variables.jl:358.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_values-Tuple{ExodusDatabase, Type{NodalVariable}, Integer, Integer, Vector{<:AbstractFloat}}","page":"Home","title":"Exodus.write_values","text":"write_values(\n    exo::ExodusDatabase,\n    t::Type{NodalVariable},\n    timestep::Integer,\n    var_index::Integer,\n    var_values::Vector{<:AbstractFloat}\n)\n\n\nWrapper for writing nodal variables by index number\n\nwrite_values(exo, t, timestep, var_index, var_values)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Variables.jl:367.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_values-Tuple{ExodusDatabase, Type{NodalVariable}, Integer, String, Vector{<:AbstractFloat}}","page":"Home","title":"Exodus.write_values","text":"write_values(\n    exo::ExodusDatabase,\n    t::Type{NodalVariable},\n    timestep::Integer,\n    var_name::String,\n    var_values::Vector{<:AbstractFloat}\n)\n\n\nWrapper method for nodal variables\n\nwrite_values(exo, t, timestep, var_name, var_values)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Variables.jl:388.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_values-Union{Tuple{V}, Tuple{ExodusDatabase, Type{V}, Integer, Integer, Integer, Vector{<:AbstractFloat}}} where V<:Exodus.AbstractVariable","page":"Home","title":"Exodus.write_values","text":"write_values(\n    exo::ExodusDatabase,\n    _::Type{V<:Exodus.AbstractVariable},\n    timestep::Integer,\n    id::Integer,\n    var_index::Integer,\n    var_values::Vector{<:AbstractFloat}\n)\n\n\nwrite_values(exo, _, timestep, id, var_index, var_values)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Variables.jl:324.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_values-Union{Tuple{V}, Tuple{ExodusDatabase, Type{V}, Integer, Integer, String, Vector{<:AbstractFloat}}} where V<:Exodus.AbstractVariable","page":"Home","title":"Exodus.write_values","text":"write_values(\n    exo::ExodusDatabase,\n    _::Type{V<:Exodus.AbstractVariable},\n    timestep::Integer,\n    id::Integer,\n    var_name::String,\n    var_value::Vector{<:AbstractFloat}\n)\n\n\nwrite_values(exo, _, timestep, id, var_name, var_value)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Variables.jl:371.\n\n\n\n\n\n","category":"method"},{"location":"#Exodus.write_values-Union{Tuple{V}, Tuple{ExodusDatabase, Type{V}, Integer, String, String, Vector{<:AbstractFloat}}} where V<:Exodus.AbstractVariable","page":"Home","title":"Exodus.write_values","text":"write_values(\n    exo::ExodusDatabase,\n    _::Type{V<:Exodus.AbstractVariable},\n    time_step::Integer,\n    set_name::String,\n    var_name::String,\n    var_value::Vector{<:AbstractFloat}\n)\n\n\nwrite_values(\n    exo,\n    _,\n    time_step,\n    set_name,\n    var_name,\n    var_value\n)\n\ndefined at /home/runner/work/Exodus.jl/Exodus.jl/src/Variables.jl:392.\n\n\n\n\n\n","category":"method"}]
}
